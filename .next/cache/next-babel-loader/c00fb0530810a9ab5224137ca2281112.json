{"ast":null,"code":"var _jsxFileName = \"/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/pages/profile.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from \"prop-types\";\nimport { get } from \"lodash/object\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport withAuthUser from \"../utils/pageWrappers/withAuthUser\";\nimport withAuthUserInfo from \"../utils/pageWrappers/withAuthUserInfo\";\nimport logout from \"../utils/auth/logout\";\n\nconst Profile = props => {\n  const {\n    AuthUserInfo,\n    data\n  } = props;\n  const AuthUser = get(AuthUserInfo, \"AuthUser\", null);\n  const {\n    favoriteFood\n  } = data;\n  console.log(AuthUserInfo);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Hi there!\"), !AuthUser ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"You are not signed in.\", \" \", __jsx(Link, {\n    href: \"/auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Sign in\"))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"You're signed in. Email: \", AuthUser.email), __jsx(\"p\", {\n    style: {\n      display: \"inlinelock\",\n      color: \"blue\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\"\n    },\n    onClick: async () => {\n      try {\n        await logout();\n        Router.push(\"/auth\");\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Log out\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Another example page\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Your favorite food is \", favoriteFood, \".\")));\n}; // Just an example.\n\n\nconst mockFetchData = async userId => ({\n  user: _objectSpread({}, userId && {\n    id: userId\n  }),\n  favoriteFood: \"pizza\"\n});\n\nProfile.getInitialProps = async ctx => {\n  // Get the AuthUserInfo object. This is set in `withAuthUser.js`.\n  // The AuthUserInfo object is available on both the server and client.\n  const AuthUserInfo = get(ctx, \"myCustomData.AuthUserInfo\", null);\n  const AuthUser = get(AuthUserInfo, \"AuthUser\", null); // You can also get the token (e.g., to authorize a request when fetching data)\n  // const AuthUserToken = get(AuthUserInfo, 'token', null)\n  // You can fetch data here.\n\n  const data = await mockFetchData(get(AuthUser, \"id\"));\n  return {\n    data\n  };\n};\n\nProfile.displayName = \"Profile\";\nProfile.propTypes = {\n  AuthUserInfo: PropTypes.shape({\n    AuthUser: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      emailVerified: PropTypes.bool.isRequired\n    }),\n    token: PropTypes.string\n  }),\n  data: PropTypes.shape({\n    user: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired,\n    favoriteFood: PropTypes.string.isRequired\n  }).isRequired\n};\nProfile.defaultProps = {\n  AuthUserInfo: null\n}; // Use `withAuthUser` to get the authed user server-side, which\n// disables static rendering.\n// Use `withAuthUserInfo` to include the authed user as a prop\n// to your component.\n\nexport default withAuthUser(Profile);","map":{"version":3,"sources":["/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/pages/profile.js"],"names":["PropTypes","get","Link","Router","withAuthUser","withAuthUserInfo","logout","Profile","props","AuthUserInfo","data","AuthUser","favoriteFood","console","log","email","display","color","textDecoration","cursor","push","e","error","mockFetchData","userId","user","id","getInitialProps","ctx","displayName","propTypes","shape","string","isRequired","emailVerified","bool","token","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport { get } from \"lodash/object\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport withAuthUser from \"../utils/pageWrappers/withAuthUser\";\nimport withAuthUserInfo from \"../utils/pageWrappers/withAuthUserInfo\";\nimport logout from \"../utils/auth/logout\";\n\nconst Profile = (props) => {\n  const { AuthUserInfo, data } = props;\n  const AuthUser = get(AuthUserInfo, \"AuthUser\", null);\n  const { favoriteFood } = data;\n  console.log(AuthUserInfo);\n\n  return (\n    <div>\n      <p>Hi there!</p>\n      {!AuthUser ? (\n        <p>\n          You are not signed in.{\" \"}\n          <Link href={\"/auth\"}>\n            <a>Sign in</a>\n          </Link>\n        </p>\n      ) : (\n        <div>\n          <p>You're signed in. Email: {AuthUser.email}</p>\n          <p\n            style={{\n              display: \"inlinelock\",\n              color: \"blue\",\n              textDecoration: \"underline\",\n              cursor: \"pointer\",\n            }}\n            onClick={async () => {\n              try {\n                await logout();\n                Router.push(\"/auth\");\n              } catch (e) {\n                console.error(e);\n              }\n            }}\n          >\n            Log out\n          </p>\n        </div>\n      )}\n      <div>\n        <Link href={\"/example\"}>\n          <a>Another example page</a>\n        </Link>\n      </div>\n      <div>\n        <div>Your favorite food is {favoriteFood}.</div>\n      </div>\n    </div>\n  );\n};\n\n// Just an example.\nconst mockFetchData = async (userId) => ({\n  user: {\n    ...(userId && {\n      id: userId,\n    }),\n  },\n  favoriteFood: \"pizza\",\n});\n\nProfile.getInitialProps = async (ctx) => {\n  // Get the AuthUserInfo object. This is set in `withAuthUser.js`.\n  // The AuthUserInfo object is available on both the server and client.\n  const AuthUserInfo = get(ctx, \"myCustomData.AuthUserInfo\", null);\n  const AuthUser = get(AuthUserInfo, \"AuthUser\", null);\n\n  // You can also get the token (e.g., to authorize a request when fetching data)\n  // const AuthUserToken = get(AuthUserInfo, 'token', null)\n\n  // You can fetch data here.\n  const data = await mockFetchData(get(AuthUser, \"id\"));\n\n  return {\n    data,\n  };\n};\n\nProfile.displayName = \"Profile\";\n\nProfile.propTypes = {\n  AuthUserInfo: PropTypes.shape({\n    AuthUser: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      emailVerified: PropTypes.bool.isRequired,\n    }),\n    token: PropTypes.string,\n  }),\n  data: PropTypes.shape({\n    user: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n    favoriteFood: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nProfile.defaultProps = {\n  AuthUserInfo: null,\n};\n\n// Use `withAuthUser` to get the authed user server-side, which\n// disables static rendering.\n// Use `withAuthUserInfo` to include the authed user as a prop\n// to your component.\nexport default withAuthUser(Profile);\n"]},"metadata":{},"sourceType":"module"}