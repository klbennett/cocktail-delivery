{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport cookie from \"js-cookie\";\nimport initFirebase from \"../utils/auth/initFirebase\"; // Init the Firebase app.\n\ninitFirebase();\nvar firebaseAuthConfig = {\n  signInFlow: \"popup\",\n  // Auth providers\n  // https://github.com/firebase/firebaseui-web#configure-oauth-providers\n  signInOptions: [{\n    provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    requireDisplayName: false\n  }],\n  signInSuccessUrl: \"/\",\n  credentialHelper: \"none\",\n  callbacks: {\n    signInSuccessWithAuthResult: function () {\n      var _signInSuccessWithAuthResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, redirectUrl) {\n        var user, uid, email, xa, userData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = _ref.user;\n                // xa is the access token, which can be retrieved through\n                // firebase.auth().currentUser.getIdToken()\n                uid = user.uid, email = user.email, xa = user.xa;\n                userData = {\n                  id: uid,\n                  email: email,\n                  token: xa\n                };\n                cookie.set(\"auth\", userData, {\n                  expires: 1\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function signInSuccessWithAuthResult(_x, _x2) {\n        return _signInSuccessWithAuthResult.apply(this, arguments);\n      }\n\n      return signInSuccessWithAuthResult;\n    }()\n  }\n};\n\nvar FirebaseAuth = function FirebaseAuth() {\n  // Do not SSR FirebaseUI, because it is not supported.\n  // https://github.com/firebase/firebaseui-web/issues/213\n  var _useState = useState(false),\n      renderAuth = _useState[0],\n      setRenderAuth = _useState[1];\n\n  useEffect(function () {\n    if (true) {\n      setRenderAuth(true);\n    }\n  }, []);\n  return __jsx(\"div\", null, renderAuth ? __jsx(StyledFirebaseAuth, {\n    uiConfig: firebaseAuthConfig,\n    firebaseAuth: firebase.auth()\n  }) : null);\n};\n\nexport default FirebaseAuth;","map":null,"metadata":{},"sourceType":"module"}