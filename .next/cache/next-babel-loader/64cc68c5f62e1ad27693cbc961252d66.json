{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport initFirebase from \"../utils/auth/initFirebase\";\nexport const addFavourite = fav => {\n  initFirebase(); // console.log(firebase.auth().currentUser);\n\n  if (firebase.auth().currentUser) {\n    const userId = firebase.auth().currentUser.uid;\n    firebase.firestore().collection(\"favs\").add({\n      user: userId,\n      fav: fav,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(() => {\n      console.log(\"Successfully added favourite!\");\n    }).catch(error => {\n      console.error(\"Error adding document: \", error);\n    });\n  } else {\n    console.log(\"there is no current user\");\n  }\n}; //This sets up the listener to fetch data.\n//This pulls back an initial 50 posts but also sets\n//a listener so as new entries fill in they are added to the top.\n\nexport const getFavourites = async () => {\n  initFirebase();\n  console.log(firebase.auth().currentUser);\n\n  if (firebase.auth().currentUser) {\n    console.log(\"get favourites called\");\n    const userId = firebase.auth().currentUser.uid;\n    let favs = [];\n    firebase.firestore().collection(\"favs\").where(\"user\", \"==\", userId).get().then(snapshot => {\n      snapshot.forEach(doc => {\n        favs.push(doc.data().fav);\n      });\n      console.log(favs);\n      return favs;\n    }).catch(err => {\n      console.log(\"Error getting documents\", err);\n    }); // console.log(favs);\n    // return favs;\n  }\n};","map":{"version":3,"sources":["/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/lib/actions.js"],"names":["firebase","initFirebase","addFavourite","fav","auth","currentUser","userId","uid","firestore","collection","add","user","timestamp","FieldValue","serverTimestamp","then","console","log","catch","error","getFavourites","favs","where","get","snapshot","forEach","doc","push","data","err"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,OAAO,MAAMC,YAAY,GAAIC,GAAD,IAAS;AACnCF,EAAAA,YAAY,GADuB,CAGnC;;AACA,MAAID,QAAQ,CAACI,IAAT,GAAgBC,WAApB,EAAiC;AAC/B,UAAMC,MAAM,GAAGN,QAAQ,CAACI,IAAT,GAAgBC,WAAhB,CAA4BE,GAA3C;AACAP,IAAAA,QAAQ,CACLQ,SADH,GAEGC,UAFH,CAEc,MAFd,EAGGC,GAHH,CAGO;AACHC,MAAAA,IAAI,EAAEL,MADH;AAEHH,MAAAA,GAAG,EAAEA,GAFF;AAGHS,MAAAA,SAAS,EAAEZ,QAAQ,CAACQ,SAAT,CAAmBK,UAAnB,CAA8BC,eAA9B;AAHR,KAHP,EAQGC,IARH,CAQQ,MAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KAVH,EAWGC,KAXH,CAWUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACD,KAbH;AAcD,GAhBD,MAgBO;AACLH,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;AACF,CAvBM,C,CAyBP;AACA;AACA;;AACA,OAAO,MAAMG,aAAa,GAAG,YAAY;AACvCnB,EAAAA,YAAY;AAEZe,EAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAQ,CAACI,IAAT,GAAgBC,WAA5B;;AACA,MAAIL,QAAQ,CAACI,IAAT,GAAgBC,WAApB,EAAiC;AAC/BW,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEA,UAAMX,MAAM,GAAGN,QAAQ,CAACI,IAAT,GAAgBC,WAAhB,CAA4BE,GAA3C;AACA,QAAIc,IAAI,GAAG,EAAX;AACArB,IAAAA,QAAQ,CACLQ,SADH,GAEGC,UAFH,CAEc,MAFd,EAGGa,KAHH,CAGS,MAHT,EAGiB,IAHjB,EAGuBhB,MAHvB,EAIGiB,GAJH,GAKGR,IALH,CAKSS,QAAD,IAAc;AAClBA,MAAAA,QAAQ,CAACC,OAAT,CAAkBC,GAAD,IAAS;AACxBL,QAAAA,IAAI,CAACM,IAAL,CAAUD,GAAG,CAACE,IAAJ,GAAWzB,GAArB;AACD,OAFD;AAGAa,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,aAAOA,IAAP;AACD,KAXH,EAYGH,KAZH,CAYUW,GAAD,IAAS;AACdb,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCY,GAAvC;AACD,KAdH,EAL+B,CAoB/B;AACA;AACD;AACF,CA3BM","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport initFirebase from \"../utils/auth/initFirebase\";\n\nexport const addFavourite = (fav) => {\n  initFirebase();\n\n  // console.log(firebase.auth().currentUser);\n  if (firebase.auth().currentUser) {\n    const userId = firebase.auth().currentUser.uid;\n    firebase\n      .firestore()\n      .collection(\"favs\")\n      .add({\n        user: userId,\n        fav: fav,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      })\n      .then(() => {\n        console.log(\"Successfully added favourite!\");\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  } else {\n    console.log(\"there is no current user\");\n  }\n};\n\n//This sets up the listener to fetch data.\n//This pulls back an initial 50 posts but also sets\n//a listener so as new entries fill in they are added to the top.\nexport const getFavourites = async () => {\n  initFirebase();\n\n  console.log(firebase.auth().currentUser);\n  if (firebase.auth().currentUser) {\n    console.log(\"get favourites called\");\n\n    const userId = firebase.auth().currentUser.uid;\n    let favs = [];\n    firebase\n      .firestore()\n      .collection(\"favs\")\n      .where(\"user\", \"==\", userId)\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          favs.push(doc.data().fav);\n        });\n        console.log(favs);\n        return favs;\n      })\n      .catch((err) => {\n        console.log(\"Error getting documents\", err);\n      });\n    // console.log(favs);\n    // return favs;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}