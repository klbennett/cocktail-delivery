{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport initFirebase from \"../utils/auth/initFirebase\";\nexport const addFavourite = fav => {\n  initFirebase();\n  firebase.firestore().collection(\"favs\").add({\n    fav: fav,\n    timestamp: firebase.firestore.FieldValue.serverTimestamp()\n  }).then(() => {\n    console.log(\"Successfully added favourite!\");\n  }).catch(error => {\n    console.error(\"Error adding document: \", error);\n  });\n}; //This sets up the listener to fetch posts.\n//This pulls back an initial 50 posts but also sets\n//a listener so as new posts fill in their are added to the top.\n\nexport const fetchFavs = () => async dispatch => {\n  firebase // .firestore()\n  .collection(\"favs\").orderBy(\"timestamp\", \"desc\").limit(50).onSnapshot(snapshot => {\n    let newState = {\n      favs: []\n    };\n    snapshot.forEach(function (doc) {\n      newState.posts.push({\n        id: doc.id,\n        post: doc.data().post\n      });\n    });\n    dispatch({\n      type: FETCH_POSTS,\n      payload: newState\n    });\n  });\n};","map":{"version":3,"sources":["/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/lib/actions.js"],"names":["firebase","initFirebase","addFavourite","fav","firestore","collection","add","timestamp","FieldValue","serverTimestamp","then","console","log","catch","error","fetchFavs","dispatch","orderBy","limit","onSnapshot","snapshot","newState","favs","forEach","doc","posts","push","id","post","data","type","FETCH_POSTS","payload"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,OAAO,MAAMC,YAAY,GAAIC,GAAD,IAAS;AACnCF,EAAAA,YAAY;AACZD,EAAAA,QAAQ,CACLI,SADH,GAEGC,UAFH,CAEc,MAFd,EAGGC,GAHH,CAGO;AACHH,IAAAA,GAAG,EAAEA,GADF;AAEHI,IAAAA,SAAS,EAAEP,QAAQ,CAACI,SAAT,CAAmBI,UAAnB,CAA8BC,eAA9B;AAFR,GAHP,EAOGC,IAPH,CAOQ,MAAM;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,GATH,EAUGC,KAVH,CAUUC,KAAD,IAAW;AAChBH,IAAAA,OAAO,CAACG,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACD,GAZH;AAaD,CAfM,C,CAiBP;AACA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjDhB,EAAAA,QAAQ,CACN;AADM,GAELK,UAFH,CAEc,MAFd,EAGGY,OAHH,CAGW,WAHX,EAGwB,MAHxB,EAIGC,KAJH,CAIS,EAJT,EAKGC,UALH,CAKeC,QAAD,IAAc;AACxB,QAAIC,QAAQ,GAAG;AACbC,MAAAA,IAAI,EAAE;AADO,KAAf;AAIAF,IAAAA,QAAQ,CAACG,OAAT,CAAiB,UAAUC,GAAV,EAAe;AAC9BH,MAAAA,QAAQ,CAACI,KAAT,CAAeC,IAAf,CAAoB;AAClBC,QAAAA,EAAE,EAAEH,GAAG,CAACG,EADU;AAElBC,QAAAA,IAAI,EAAEJ,GAAG,CAACK,IAAJ,GAAWD;AAFC,OAApB;AAID,KALD;AAOAZ,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAEC,WADC;AAEPC,MAAAA,OAAO,EAAEX;AAFF,KAAD,CAAR;AAID,GArBH;AAsBD,CAvBM","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport initFirebase from \"../utils/auth/initFirebase\";\n\nexport const addFavourite = (fav) => {\n  initFirebase();\n  firebase\n    .firestore()\n    .collection(\"favs\")\n    .add({\n      fav: fav,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n    .then(() => {\n      console.log(\"Successfully added favourite!\");\n    })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n    });\n};\n\n//This sets up the listener to fetch posts.\n//This pulls back an initial 50 posts but also sets\n//a listener so as new posts fill in their are added to the top.\nexport const fetchFavs = () => async (dispatch) => {\n  firebase\n    // .firestore()\n    .collection(\"favs\")\n    .orderBy(\"timestamp\", \"desc\")\n    .limit(50)\n    .onSnapshot((snapshot) => {\n      let newState = {\n        favs: [],\n      };\n\n      snapshot.forEach(function (doc) {\n        newState.posts.push({\n          id: doc.id,\n          post: doc.data().post,\n        });\n      });\n\n      dispatch({\n        type: FETCH_POSTS,\n        payload: newState,\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}