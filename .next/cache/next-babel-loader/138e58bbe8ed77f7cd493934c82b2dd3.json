{"ast":null,"code":"var _jsxFileName = \"/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/pages/results.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport useSWR from \"swr\";\nimport { getCocktailData, API_URL } from \"../lib/API\";\nimport fetcher from \"../lib/fetcher\";\nimport CocktailsList from \"../components/CocktailsList\";\nimport { useRouter } from \"next/router\";\nimport mockData from \"../mockData.json\";\n\nconst Results = () => {\n  const router = useRouter(); // const { data, error } = useSWR(router.query.keyword, API_URL, fetcher);\n\n  const results = getCocktailData(router.query.keyword); // if (error) return <div>failed to load</div>;\n  // if (!data) return <div>loading...</div>;\n\n  return __jsx(CocktailsList, {\n    drinks: results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default Results;","map":{"version":3,"sources":["/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/pages/results.js"],"names":["React","useSWR","getCocktailData","API_URL","fetcher","CocktailsList","useRouter","mockData","Results","router","results","query","keyword"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,YAAzC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,MAAM,GAAGH,SAAS,EAAxB,CADoB,CAGpB;;AACA,QAAMI,OAAO,GAAGR,eAAe,CAACO,MAAM,CAACE,KAAP,CAAaC,OAAd,CAA/B,CAJoB,CAMpB;AACA;;AAEA,SAAO,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEF,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAVD;;AAYA,eAAeF,OAAf","sourcesContent":["import React from \"react\";\nimport useSWR from \"swr\";\nimport { getCocktailData, API_URL } from \"../lib/API\";\nimport fetcher from \"../lib/fetcher\";\nimport CocktailsList from \"../components/CocktailsList\";\nimport { useRouter } from \"next/router\";\nimport mockData from \"../mockData.json\";\n\nconst Results = () => {\n  const router = useRouter();\n\n  // const { data, error } = useSWR(router.query.keyword, API_URL, fetcher);\n  const results = getCocktailData(router.query.keyword);\n\n  // if (error) return <div>failed to load</div>;\n  // if (!data) return <div>loading...</div>;\n\n  return <CocktailsList drinks={results} />;\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}