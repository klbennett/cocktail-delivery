{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst config = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_PUBLIC_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID\n};\nexport default function initFirebase() {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(config);\n  }\n\n  console.log(firebase);\n  let doc = db.collection(\"cities\").doc(\"SF\");\n  let observer = doc.onSnapshot(docSnapshot => {\n    console.log(`Received doc snapshot: ${docSnapshot}`); // ...\n  }, err => {\n    console.log(`Encountered error: ${err}`);\n  });\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      console.log(\"there is a user\");\n      console.log(user); // User is signed in.\n    } else {// No user is signed in.\n      }\n  });\n}","map":{"version":3,"sources":["/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/utils/auth/initFirebase.js"],"names":["firebase","config","apiKey","process","env","NEXT_PUBLIC_FIREBASE_PUBLIC_API_KEY","authDomain","NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN","databaseURL","NEXT_PUBLIC_FIREBASE_DATABASE_URL","projectId","NEXT_PUBLIC_FIREBASE_PROJECT_ID","initFirebase","apps","length","initializeApp","console","log","doc","db","collection","observer","onSnapshot","docSnapshot","err","auth","onAuthStateChanged","user"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,mCADP;AAEbC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,gCAFX;AAGbC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,iCAHZ;AAIbC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAJV,CAAf;AAOA,eAAe,SAASC,YAAT,GAAwB;AACrC,MAAI,CAACZ,QAAQ,CAACa,IAAT,CAAcC,MAAnB,EAA2B;AACzBd,IAAAA,QAAQ,CAACe,aAAT,CAAuBd,MAAvB;AACD;;AACDe,EAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AAEA,MAAIkB,GAAG,GAAGC,EAAE,CAACC,UAAH,CAAc,QAAd,EAAwBF,GAAxB,CAA4B,IAA5B,CAAV;AAEA,MAAIG,QAAQ,GAAGH,GAAG,CAACI,UAAJ,CACZC,WAAD,IAAiB;AACfP,IAAAA,OAAO,CAACC,GAAR,CAAa,0BAAyBM,WAAY,EAAlD,EADe,CAEf;AACD,GAJY,EAKZC,GAAD,IAAS;AACPR,IAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBO,GAAI,EAAtC;AACD,GAPY,CAAf;AAUAxB,EAAAA,QAAQ,CAACyB,IAAT,GAAgBC,kBAAhB,CAAmC,UAAUC,IAAV,EAAgB;AACjD,QAAIA,IAAJ,EAAU;AACRX,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ,EAFQ,CAGR;AACD,KAJD,MAIO,CACL;AACD;AACF,GARD;AASD","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_PUBLIC_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n};\n\nexport default function initFirebase() {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(config);\n  }\n  console.log(firebase);\n\n  let doc = db.collection(\"cities\").doc(\"SF\");\n\n  let observer = doc.onSnapshot(\n    (docSnapshot) => {\n      console.log(`Received doc snapshot: ${docSnapshot}`);\n      // ...\n    },\n    (err) => {\n      console.log(`Encountered error: ${err}`);\n    }\n  );\n\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      console.log(\"there is a user\");\n      console.log(user);\n      // User is signed in.\n    } else {\n      // No user is signed in.\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}