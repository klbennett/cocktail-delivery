{"ast":null,"code":"var _jsxFileName = \"/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/pages/results.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSWR } from \"useSWR\";\nimport { getCocktailData, QUERY_URL } from \"../lib/API\";\nimport fetcher from \"../lib/fetcher\";\nexport default function Results({\n  cocktailsData\n}) {\n  const {\n    data,\n    error\n  } = useSWR(QUERY_URL, fetcher);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }\n  }, \"failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(CocktailsList, {\n    drinks: cocktailsData.drinks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/pages/results.js"],"names":["React","useSWR","getCocktailData","QUERY_URL","fetcher","Results","cocktailsData","data","error","drinks"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,YAA3C;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAoC;AACjD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBP,MAAM,CAACE,SAAD,EAAYC,OAAZ,CAA9B;AAEA,MAAII,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAED,aAAa,CAACG,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React from \"react\";\nimport { useSWR } from \"useSWR\";\nimport { getCocktailData, QUERY_URL } from \"../lib/API\";\nimport fetcher from \"../lib/fetcher\";\n\nexport default function Results({ cocktailsData }) {\n  const { data, error } = useSWR(QUERY_URL, fetcher);\n\n  if (error) return <div>failed to load</div>;\n  if (!data) return <div>loading...</div>;\n\n  return (\n    <div>\n      <CocktailsList drinks={cocktailsData.drinks} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}