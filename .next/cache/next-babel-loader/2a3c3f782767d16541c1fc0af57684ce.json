{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/pages/favourites.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport useSWR from \"swr\";\nimport fetcher from \"../lib/fetcher\";\nimport CocktailsList from \"../components/CocktailsList\";\nimport Router from \"next/router\";\nimport mockData from \"../mockData.json\";\nimport { getFavourites } from \"../lib/actions\";\n\nvar Favourites = function Favourites(props) {\n  _s();\n\n  console.log(props);\n\n  var _useState = useState(null),\n      favs = _useState[0],\n      setFavs = _useState[1];\n\n  if (props.drinks) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 28\n    }\n  }, \"lol\"); // return props.drinks.map((el) => <p>{JSON.stringify(el)}</p>);\n\n  return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }, \"no favs\");\n};\n\n_s(Favourites, \"TwfnYq6Z/9ymJQqTmr2eFTeTHys=\");\n\n_c = Favourites;\n\nFavourites.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            res = getFavourites();\n            console.log(res);\n            return _context.abrupt(\"return\", {\n              drinks: res\n            });\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Favourites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"sources":["/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/pages/favourites.js"],"names":["React","useEffect","useState","useSWR","fetcher","CocktailsList","Router","mockData","getFavourites","Favourites","props","console","log","favs","setFavs","drinks","getInitialProps","ctx","res","error"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAD4B,kBAEJR,QAAQ,CAAC,IAAD,CAFJ;AAAA,MAErBW,IAFqB;AAAA,MAEfC,OAFe;;AAI5B,MAAIJ,KAAK,CAACK,MAAV,EAAkB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP,CAJU,CAK5B;;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,CARD;;GAAMN,U;;KAAAA,U;;AAUNA,UAAU,CAACO,eAAX;AAAA,sEAA6B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnBC,YAAAA,GAFmB,GAEbV,aAAa,EAFA;AAGzBG,YAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AAHyB,6CAIlB;AAAEH,cAAAA,MAAM,EAAEG;AAAV,aAJkB;;AAAA;AAAA;AAAA;AAMzBP,YAAAA,OAAO,CAACQ,KAAR;;AANyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeV,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport useSWR from \"swr\";\nimport fetcher from \"../lib/fetcher\";\nimport CocktailsList from \"../components/CocktailsList\";\nimport Router from \"next/router\";\nimport mockData from \"../mockData.json\";\nimport { getFavourites } from \"../lib/actions\";\n\nconst Favourites = (props) => {\n  console.log(props);\n  const [favs, setFavs] = useState(null);\n\n  if (props.drinks) return <p>lol</p>;\n  // return props.drinks.map((el) => <p>{JSON.stringify(el)}</p>);\n\n  return <p>no favs</p>;\n};\n\nFavourites.getInitialProps = async (ctx) => {\n  try {\n    const res = getFavourites();\n    console.log(res);\n    return { drinks: res };\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport default Favourites;\n"]},"metadata":{},"sourceType":"module"}