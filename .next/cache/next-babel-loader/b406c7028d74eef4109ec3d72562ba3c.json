{"ast":null,"code":"var _jsxFileName = \"/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/pages/results.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport useSWR from \"swr\";\nimport { getCocktailData } from \"../lib/API\";\nimport fetcher from \"../lib/fetcher\";\nimport CocktailsList from \"../components/CocktailsList\";\nimport { useRouter } from \"next/router\";\nconst API_URL = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\nexport default async function Results() {\n  const router = useRouter();\n  console.log(router.query);\n  const data = await getCocktailData(router.query.keyword);\n  return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }, \" \", data && JSON.stringify(data));\n}","map":{"version":3,"sources":["/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/pages/results.js"],"names":["React","useSWR","getCocktailData","fetcher","CocktailsList","useRouter","API_URL","Results","router","console","log","query","data","keyword","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,OAAO,GAAG,2DAAhB;AAEA,eAAe,eAAeC,OAAf,GAAyB;AACtC,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,KAAnB;AACA,QAAMC,IAAI,GAAG,MAAMV,eAAe,CAACM,MAAM,CAACG,KAAP,CAAaE,OAAd,CAAlC;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKD,IAAI,IAAIE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAb,CAAP;AACD","sourcesContent":["import React from \"react\";\nimport useSWR from \"swr\";\nimport { getCocktailData } from \"../lib/API\";\nimport fetcher from \"../lib/fetcher\";\nimport CocktailsList from \"../components/CocktailsList\";\nimport { useRouter } from \"next/router\";\n\nconst API_URL = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\n\nexport default async function Results() {\n  const router = useRouter();\n  console.log(router.query);\n  const data = await getCocktailData(router.query.keyword);\n  return <p> {data && JSON.stringify(data)}</p>;\n}\n"]},"metadata":{},"sourceType":"module"}