{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport initFirebase from \"../utils/auth/initFirebase\";\nexport const addFavourite = fav => {\n  initFirebase();\n  console.log(firebase.auth().currentUser);\n\n  if (firebase.auth().currentUser) {\n    const userId = firebase.auth().currentUser.uid;\n    firebase.firestore().collection(\"favs\").add({\n      user: userId,\n      fav: fav,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(() => {\n      console.log(\"Successfully added favourite!\");\n    }).catch(error => {\n      console.error(\"Error adding document: \", error);\n    });\n  } else {\n    console.log(\"there is no current user\");\n  }\n}; //This sets up the listener to fetch data.\n//This pulls back an initial 50 posts but also sets\n//a listener so as new entries fill in they are added to the top.\n\nexport const fetchFavourites = () => {\n  initFirebase();\n  console.log(firebase.auth());\n\n  if (firebase.auth().currentUser) {\n    const userId = firebase.auth().currentUser.uid;\n    firebase.firestore().collection(\"favs\").where(\"user\", \"==\", userId).get() //   .orderBy(\"timestamp\", \"desc\")\n    //   .limit(50)\n    .onSnapshot(snapshot => {\n      let newState = {\n        favs: []\n      };\n      snapshot.forEach(function (doc) {\n        newState.favs.push({\n          id: doc.id,\n          fav: doc.data().fav\n        });\n        console.log(newState);\n      });\n    });\n  } else {\n    console.log(\"did not work :(\");\n  }\n};","map":{"version":3,"sources":["/Users/kaybennett/.Trash/nextjs-blog/nextjs-blog/lib/actions.js"],"names":["firebase","initFirebase","addFavourite","fav","console","log","auth","currentUser","userId","uid","firestore","collection","add","user","timestamp","FieldValue","serverTimestamp","then","catch","error","fetchFavourites","where","get","onSnapshot","snapshot","newState","favs","forEach","doc","push","id","data"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,OAAO,MAAMC,YAAY,GAAIC,GAAD,IAAS;AACnCF,EAAAA,YAAY;AAEZG,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,IAAT,GAAgBC,WAA5B;;AACA,MAAIP,QAAQ,CAACM,IAAT,GAAgBC,WAApB,EAAiC;AAC/B,UAAMC,MAAM,GAAGR,QAAQ,CAACM,IAAT,GAAgBC,WAAhB,CAA4BE,GAA3C;AACAT,IAAAA,QAAQ,CACLU,SADH,GAEGC,UAFH,CAEc,MAFd,EAGGC,GAHH,CAGO;AACHC,MAAAA,IAAI,EAAEL,MADH;AAEHL,MAAAA,GAAG,EAAEA,GAFF;AAGHW,MAAAA,SAAS,EAAEd,QAAQ,CAACU,SAAT,CAAmBK,UAAnB,CAA8BC,eAA9B;AAHR,KAHP,EAQGC,IARH,CAQQ,MAAM;AACVb,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KAVH,EAWGa,KAXH,CAWUC,KAAD,IAAW;AAChBf,MAAAA,OAAO,CAACe,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACD,KAbH;AAcD,GAhBD,MAgBO;AACLf,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;AACF,CAvBM,C,CAyBP;AACA;AACA;;AACA,OAAO,MAAMe,eAAe,GAAG,MAAM;AACnCnB,EAAAA,YAAY;AACZG,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,IAAT,EAAZ;;AAEA,MAAIN,QAAQ,CAACM,IAAT,GAAgBC,WAApB,EAAiC;AAC/B,UAAMC,MAAM,GAAGR,QAAQ,CAACM,IAAT,GAAgBC,WAAhB,CAA4BE,GAA3C;AAEAT,IAAAA,QAAQ,CACLU,SADH,GAEGC,UAFH,CAEc,MAFd,EAGGU,KAHH,CAGS,MAHT,EAGiB,IAHjB,EAGuBb,MAHvB,EAIGc,GAJH,GAKE;AACA;AANF,KAOGC,UAPH,CAOeC,QAAD,IAAc;AACxB,UAAIC,QAAQ,GAAG;AACbC,QAAAA,IAAI,EAAE;AADO,OAAf;AAIAF,MAAAA,QAAQ,CAACG,OAAT,CAAiB,UAAUC,GAAV,EAAe;AAC9BH,QAAAA,QAAQ,CAACC,IAAT,CAAcG,IAAd,CAAmB;AACjBC,UAAAA,EAAE,EAAEF,GAAG,CAACE,EADS;AAEjB3B,UAAAA,GAAG,EAAEyB,GAAG,CAACG,IAAJ,GAAW5B;AAFC,SAAnB;AAIAC,QAAAA,OAAO,CAACC,GAAR,CAAYoB,QAAZ;AACD,OAND;AAOD,KAnBH;AAoBD,GAvBD,MAuBO;AACLrB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;AACF,CA9BM","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport initFirebase from \"../utils/auth/initFirebase\";\n\nexport const addFavourite = (fav) => {\n  initFirebase();\n\n  console.log(firebase.auth().currentUser);\n  if (firebase.auth().currentUser) {\n    const userId = firebase.auth().currentUser.uid;\n    firebase\n      .firestore()\n      .collection(\"favs\")\n      .add({\n        user: userId,\n        fav: fav,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      })\n      .then(() => {\n        console.log(\"Successfully added favourite!\");\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  } else {\n    console.log(\"there is no current user\");\n  }\n};\n\n//This sets up the listener to fetch data.\n//This pulls back an initial 50 posts but also sets\n//a listener so as new entries fill in they are added to the top.\nexport const fetchFavourites = () => {\n  initFirebase();\n  console.log(firebase.auth());\n\n  if (firebase.auth().currentUser) {\n    const userId = firebase.auth().currentUser.uid;\n\n    firebase\n      .firestore()\n      .collection(\"favs\")\n      .where(\"user\", \"==\", userId)\n      .get()\n      //   .orderBy(\"timestamp\", \"desc\")\n      //   .limit(50)\n      .onSnapshot((snapshot) => {\n        let newState = {\n          favs: [],\n        };\n\n        snapshot.forEach(function (doc) {\n          newState.favs.push({\n            id: doc.id,\n            fav: doc.data().fav,\n          });\n          console.log(newState);\n        });\n      });\n  } else {\n    console.log(\"did not work :(\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}